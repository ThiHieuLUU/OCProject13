version: 2.1

orbs:
  python: circleci/python@1.2
  heroku: circleci/heroku@1.2.6

executors:
  docker-executor:
    environment:
      IMAGE_NAME: oc-lettings-site
    docker:
#      - image: cimg/python:3.8
      - image: python:3.8-slim-buster

jobs:
  compile-and-test:
    executor: docker-executor
    steps:
      - checkout
      - run:
          name: Create venv
          command: python -m venv venv
      - run:
          name: Activate venv
          command: source venv/bin/activate
      - run:
          name: Install requirements
          command: pip install -r requirements.txt
      - run:
          name: Check PEP8
          command: flake8
      - run:
          name: Run tests
          env:
            SECRET_KEY: $SECRET_KEY
            DSN_SENTRY: $DSN_SENTRY
          command: pytest

  dockerize-and-publish:
    executor: docker-executor
#    docker:
##      - image: cimg/python:3.8
#      - image: cimg/python:3.8
    steps:
      - checkout
      - setup_remote_docker
      - run:
          name: Build Docker image
          command: docker build --build-arg SECRET_KEY=${SECRET_KEY} -t $DOCKERHUB_USERNAME/$IMAGE_NAME:$CIRCLE_SHA1 .
      - run:
          name: Publish Docker Image to Docker Hub
          command: |
            echo "$DOCKERHUB_PASSWORD" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin
            docker push $DOCKERHUB_USERNAME/$IMAGE_NAME:$CIRCLE_SHA1
            docker logout

  deploy-to-heroku:
    executor: heroku/default
    steps:
      - checkout
      - heroku/install
      - run: heroku config:set SECRET_KEY=$SECRET_KEY -a $HEROKU_APP_NAME
      - run: heroku config:set DSN_SENTRY=$DSN_SENTRY -a $HEROKU_APP_NAME
      - run: heroku config:set ALLOWED_HOSTS=$ALLOWED_HOSTS -a $HEROKU_APP_NAME
      - run: heroku stack:set heroku-20 -a $HEROKU_APP_NAME

      - heroku/deploy-via-git:
          app-name: $HEROKU_APP_NAME
          force: true

workflows:
  build-test-deploy:
    jobs:
      - compile-and-test:
          filters: # Only com the main branch
            branches:
              only: main

      - dockerize-and-publish:
          requires:
            - compile-and-test
          filters: # Only dockerize from main branch
            branches:
              only: main

      - deploy-to-heroku:
          requires:
            - dockerize-and-publish
          filters: # Only deploy from main branch
            branches:
              only: main